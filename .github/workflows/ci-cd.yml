name: CI/CD Pipeline with Docker Deploy

on:
  push:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: python -m unittest test_main.py

  build-docker-image:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub (for github packages)
        uses: docker/login-action@v2
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Build the Docker image
        run: docker build -t ivanovspb/cdci:latest .

      - name: Push the Docker image
        run: docker DOCKER.IO/LIBRARY/CD:LATEST

  deploy:
    runs-on: ubuntu-latest
    needs: build-docker-image
    environment:
      name: production
      url: https://example.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Docker Host
        uses: appleboy/ssh-action@v2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull docker.pkg.github.com/${{ github.repository }}:${{ github.sha }}
            docker stop my-running-app || true
            docker rm my-running-app || true
            docker run -d -p 8000:8000 --name my-running-app docker.pkg.github.com/${{ github.repository }}:${{ github.sha }}
