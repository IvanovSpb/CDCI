name: CI/CD Pipeline with Docker Deploy

on:
  push:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: python -m unittest test_main.py  # Assuming test_main.py exists


  build-and-push-image:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t ivanovspb/cdci/my-python-app:latest .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_TOKEN }} # Use a descriptive name

      - name: Push Docker image
        run: docker push docker.pkg.github.com/ivanovspb/cdci/my-python-app:latest


  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Docker Build Cache (optional but recommended)
        id: build-cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-


      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Login to Docker Hub (optional, but recommended to avoid credential repetition)
        uses: docker/login-action@v2
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Deploy to Docker Host
        run: |
          docker pull docker.pkg.github.com/ivanovspb/cdci/my-python-app:latest
          docker stop my-running-app || true
          docker rm my-running-app || true
          docker run -d -p 8000:8000 --name my-running-app docker.pkg.github.com/ivanovspb/cdci/my-python-app:latest
        env:
          DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
